{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### A Look at the Data\n",
    "\n",
    "In order to get a better understanding of the data we will be looking at throughout this lesson, let's take a look at some of the characteristics of the dataset.\n",
    "\n",
    "First, let's read in the data and necessary libraries."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "## Should I look for a job in the Western World?\n",
    "## Business Understanding\n",
    "\n",
    "For this project, I used the Stack Overflow data from 2017 to better understand:\n",
    "\n",
    "As a programmer, would I go to work in the western world (e.g. America, Europe, etc.) or \n",
    "remain in the eastern world (e.g. India, China, etc.)?\n",
    "\n",
    "What is the salary difference in the western world and in the eastern world?\n",
    "\n",
    "How are the programmers satisfied about their job between these two sides of the world?\n",
    "\n",
    "Are there more and better job opportunities in the western world than that in the eastern world?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Respondent</th>\n",
       "      <th>Professional</th>\n",
       "      <th>ProgramHobby</th>\n",
       "      <th>Country</th>\n",
       "      <th>University</th>\n",
       "      <th>EmploymentStatus</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th>MajorUndergrad</th>\n",
       "      <th>HomeRemote</th>\n",
       "      <th>CompanySize</th>\n",
       "      <th>...</th>\n",
       "      <th>StackOverflowMakeMoney</th>\n",
       "      <th>Gender</th>\n",
       "      <th>HighestEducationParents</th>\n",
       "      <th>Race</th>\n",
       "      <th>SurveyLong</th>\n",
       "      <th>QuestionsInteresting</th>\n",
       "      <th>QuestionsConfusing</th>\n",
       "      <th>InterestedAnswers</th>\n",
       "      <th>Salary</th>\n",
       "      <th>ExpectedSalary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Student</td>\n",
       "      <td>Yes, both</td>\n",
       "      <td>United States</td>\n",
       "      <td>No</td>\n",
       "      <td>Not employed, and not looking for work</td>\n",
       "      <td>Secondary school</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Strongly disagree</td>\n",
       "      <td>Male</td>\n",
       "      <td>High school</td>\n",
       "      <td>White or of European descent</td>\n",
       "      <td>Strongly disagree</td>\n",
       "      <td>Strongly agree</td>\n",
       "      <td>Disagree</td>\n",
       "      <td>Strongly agree</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Student</td>\n",
       "      <td>Yes, both</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>Yes, full-time</td>\n",
       "      <td>Employed part-time</td>\n",
       "      <td>Some college/university study without earning ...</td>\n",
       "      <td>Computer science or software engineering</td>\n",
       "      <td>More than half, but not all, the time</td>\n",
       "      <td>20 to 99 employees</td>\n",
       "      <td>...</td>\n",
       "      <td>Strongly disagree</td>\n",
       "      <td>Male</td>\n",
       "      <td>A master's degree</td>\n",
       "      <td>White or of European descent</td>\n",
       "      <td>Somewhat agree</td>\n",
       "      <td>Somewhat agree</td>\n",
       "      <td>Disagree</td>\n",
       "      <td>Strongly agree</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Professional developer</td>\n",
       "      <td>Yes, both</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>No</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>Bachelor's degree</td>\n",
       "      <td>Computer science or software engineering</td>\n",
       "      <td>Less than half the time, but at least one day ...</td>\n",
       "      <td>10,000 or more employees</td>\n",
       "      <td>...</td>\n",
       "      <td>Disagree</td>\n",
       "      <td>Male</td>\n",
       "      <td>A professional degree</td>\n",
       "      <td>White or of European descent</td>\n",
       "      <td>Somewhat agree</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Disagree</td>\n",
       "      <td>Agree</td>\n",
       "      <td>113750.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Professional non-developer who sometimes write...</td>\n",
       "      <td>Yes, both</td>\n",
       "      <td>United States</td>\n",
       "      <td>No</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>A non-computer-focused engineering discipline</td>\n",
       "      <td>Less than half the time, but at least one day ...</td>\n",
       "      <td>10,000 or more employees</td>\n",
       "      <td>...</td>\n",
       "      <td>Disagree</td>\n",
       "      <td>Male</td>\n",
       "      <td>A doctoral degree</td>\n",
       "      <td>White or of European descent</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Somewhat agree</td>\n",
       "      <td>Strongly agree</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Professional developer</td>\n",
       "      <td>Yes, I program as a hobby</td>\n",
       "      <td>Switzerland</td>\n",
       "      <td>No</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>Master's degree</td>\n",
       "      <td>Computer science or software engineering</td>\n",
       "      <td>Never</td>\n",
       "      <td>10 to 19 employees</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 154 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Respondent                                       Professional  \\\n",
       "0           1                                            Student   \n",
       "1           2                                            Student   \n",
       "2           3                             Professional developer   \n",
       "3           4  Professional non-developer who sometimes write...   \n",
       "4           5                             Professional developer   \n",
       "\n",
       "                ProgramHobby         Country      University  \\\n",
       "0                  Yes, both   United States              No   \n",
       "1                  Yes, both  United Kingdom  Yes, full-time   \n",
       "2                  Yes, both  United Kingdom              No   \n",
       "3                  Yes, both   United States              No   \n",
       "4  Yes, I program as a hobby     Switzerland              No   \n",
       "\n",
       "                         EmploymentStatus  \\\n",
       "0  Not employed, and not looking for work   \n",
       "1                      Employed part-time   \n",
       "2                      Employed full-time   \n",
       "3                      Employed full-time   \n",
       "4                      Employed full-time   \n",
       "\n",
       "                                     FormalEducation  \\\n",
       "0                                   Secondary school   \n",
       "1  Some college/university study without earning ...   \n",
       "2                                  Bachelor's degree   \n",
       "3                                    Doctoral degree   \n",
       "4                                    Master's degree   \n",
       "\n",
       "                                  MajorUndergrad  \\\n",
       "0                                            NaN   \n",
       "1       Computer science or software engineering   \n",
       "2       Computer science or software engineering   \n",
       "3  A non-computer-focused engineering discipline   \n",
       "4       Computer science or software engineering   \n",
       "\n",
       "                                          HomeRemote  \\\n",
       "0                                                NaN   \n",
       "1              More than half, but not all, the time   \n",
       "2  Less than half the time, but at least one day ...   \n",
       "3  Less than half the time, but at least one day ...   \n",
       "4                                              Never   \n",
       "\n",
       "                CompanySize       ...       StackOverflowMakeMoney Gender  \\\n",
       "0                       NaN       ...            Strongly disagree   Male   \n",
       "1        20 to 99 employees       ...            Strongly disagree   Male   \n",
       "2  10,000 or more employees       ...                     Disagree   Male   \n",
       "3  10,000 or more employees       ...                     Disagree   Male   \n",
       "4        10 to 19 employees       ...                          NaN    NaN   \n",
       "\n",
       "  HighestEducationParents                          Race         SurveyLong  \\\n",
       "0             High school  White or of European descent  Strongly disagree   \n",
       "1       A master's degree  White or of European descent     Somewhat agree   \n",
       "2   A professional degree  White or of European descent     Somewhat agree   \n",
       "3       A doctoral degree  White or of European descent              Agree   \n",
       "4                     NaN                           NaN                NaN   \n",
       "\n",
       "  QuestionsInteresting QuestionsConfusing InterestedAnswers    Salary  \\\n",
       "0       Strongly agree           Disagree    Strongly agree       NaN   \n",
       "1       Somewhat agree           Disagree    Strongly agree       NaN   \n",
       "2                Agree           Disagree             Agree  113750.0   \n",
       "3                Agree     Somewhat agree    Strongly agree       NaN   \n",
       "4                  NaN                NaN               NaN       NaN   \n",
       "\n",
       "   ExpectedSalary  \n",
       "0             NaN  \n",
       "1         37500.0  \n",
       "2             NaN  \n",
       "3             NaN  \n",
       "4             NaN  \n",
       "\n",
       "[5 rows x 154 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import ALookAtTheData as t\n",
    "from IPython import display\n",
    "%matplotlib inline\n",
    "\n",
    "df = pd.read_csv('./survey_results_public.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you work through the notebook(s) in this and future parts of this program, you will see some consistency in how to test your solutions to assure they match what we achieved!  In every environment, there is a solution file and a test file.  There will be checks for each solution built into each notebook, but if you get stuck, you may also open the solution notebook to see how we find any of the solutions.  Let's take a look at an example.\n",
    "\n",
    "### Question 1\n",
    "\n",
    "**1.** Provide the number of rows and columns in this dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nice job there are 19102 rows in the dataset!\n",
      "Nice job there are 154 columns in the dataset!\n"
     ]
    }
   ],
   "source": [
    "# We solved this one for you by providing the number of rows and columns:\n",
    "# You can see how we are prompted that we solved for the number of rows and cols correctly!\n",
    "\n",
    "num_rows = df.shape[0] #Provide the number of rows in the dataset\n",
    "num_cols = df.shape[1] #Provide the number of columns in the dataset\n",
    "\n",
    "t.check_rows_cols(num_rows, num_cols) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "That doesn't look like what we were expecting for the number of rows.\n",
      "That doesn't look like what we were expecting for the number of columns.\n"
     ]
    }
   ],
   "source": [
    "# If we made a mistake - a different prompt will appear\n",
    "\n",
    "flipped_num_rows = df.shape[1] #Provide the number of rows in the dataset\n",
    "flipped_num_cols = df.shape[0] #Provide the number of columns in the dataset\n",
    "\n",
    "t.check_rows_cols(flipped_num_rows, flipped_num_cols) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# If you want to know more about what the test function is expecting, \n",
    "# you can read the documentation the same way as any other funtion\n",
    "\n",
    "t.check_rows_cols?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that you are familiar with how to test your code - let's have you answer your first question:\n",
    "\n",
    "### Question 2\n",
    "\n",
    "**2.** Which columns had no missing values? Provide a set of column names that have no missing values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nice job that looks right!\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<img src=\"https://bit.ly/2K9X0gD\">"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "no_nulls = set(df.columns[df.isnull().mean()==0]) #Provide a set of columns with 0 missing values.\n",
    "\n",
    "display.HTML(t.no_null_cols(no_nulls))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 3\n",
    "\n",
    "**3.** Which columns have the most missing values?  Provide a set of column names that have more than 75% if their values missing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nice job that looks right!\n"
     ]
    }
   ],
   "source": [
    "most_missing_cols = set(df.columns[df.isnull().mean() > 0.75]) #Provide a set of columns with more than 75% of the values missing\n",
    "    \n",
    "t.most_missing_cols(most_missing_cols)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 4\n",
    "\n",
    "**4.** Provide a pandas series of the different **Professional** status values in the dataset along with the count of the number of individuals with each status.  Store this pandas series in **status_vals**.  If you are correct, you should see a bar chart of the proportion of individuals in each status."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8519edbbe0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "status_vals = df.Professional.value_counts()#Provide a pandas series of the counts for each Professional status\n",
    "\n",
    "# The below should be a bar chart of the proportion of individuals in each professional category if your status_vals\n",
    "# is set up correctly.\n",
    "\n",
    "(status_vals/df.shape[0]).plot(kind=\"bar\");\n",
    "plt.title(\"What kind of developer are you?\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 5\n",
    "\n",
    "**5.** Provide a pandas series of the different **FormalEducation** status values in the dataset along with the count of how many individuals received that formal education.  Store this pandas series in **ed_vals**.  If you are correct, you should see a bar chart of the proportion of individuals in each status."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8519b50550>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ed_vals = df.FormalEducation.value_counts()#Provide a pandas series of the counts for each FormalEducation status\n",
    "\n",
    "# The below should be a bar chart of the proportion of individuals in your ed_vals\n",
    "# if it is set up correctly.\n",
    "\n",
    "(ed_vals/df.shape[0]).plot(kind=\"bar\");\n",
    "plt.title(\"Formal Education\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 6\n",
    "\n",
    "**6.** Provide a pandas series of the different **Country** values in the dataset along with the count of how many individuals are from each country.  Store this pandas series in **count_vals**.  If you are correct, you should see a bar chart of the proportion of individuals in each country."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8519ac3240>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_vals = df.Country.value_counts()#Provide a pandas series of the counts for each Country\n",
    "\n",
    "# The below should be a bar chart of the proportion of the top 10 countries for the\n",
    "# individuals in your count_vals if it is set up correctly.\n",
    "\n",
    "(count_vals[:10]/df.shape[0]).plot(kind=\"bar\");\n",
    "plt.title(\"Country\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Feel free to explore the dataset further to gain additional familiarity with the columns and rows in the dataset.  You will be working pretty closely with this dataset throughout this lesson."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <th>FormalEducation</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">Female</th>\n",
       "      <th>Bachelor's degree</th>\n",
       "      <td>59901.894205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doctoral degree</th>\n",
       "      <td>83332.583351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>I prefer not to answer</th>\n",
       "      <td>20691.397849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Master's degree</th>\n",
       "      <td>51395.305901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Professional degree</th>\n",
       "      <td>67521.095365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Secondary school</th>\n",
       "      <td>38673.862023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Some college/university study without earning a bachelor's degree</th>\n",
       "      <td>45149.521658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"9\" valign=\"top\">Male</th>\n",
       "      <th>Bachelor's degree</th>\n",
       "      <td>59538.372951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doctoral degree</th>\n",
       "      <td>77120.265378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>I never completed any formal education</th>\n",
       "      <td>43956.636637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>I prefer not to answer</th>\n",
       "      <td>40850.596080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Master's degree</th>\n",
       "      <td>61632.442196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Primary/elementary school</th>\n",
       "      <td>64022.483103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Professional degree</th>\n",
       "      <td>45662.824726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Secondary school</th>\n",
       "      <td>39544.122310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Some college/university study without earning a bachelor's degree</th>\n",
       "      <td>60420.217368</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                 Salary\n",
       "Gender FormalEducation                                                 \n",
       "Female Bachelor's degree                                   59901.894205\n",
       "       Doctoral degree                                     83332.583351\n",
       "       I prefer not to answer                              20691.397849\n",
       "       Master's degree                                     51395.305901\n",
       "       Professional degree                                 67521.095365\n",
       "       Secondary school                                    38673.862023\n",
       "       Some college/university study without earning a...  45149.521658\n",
       "Male   Bachelor's degree                                   59538.372951\n",
       "       Doctoral degree                                     77120.265378\n",
       "       I never completed any formal education              43956.636637\n",
       "       I prefer not to answer                              40850.596080\n",
       "       Master's degree                                     61632.442196\n",
       "       Primary/elementary school                           64022.483103\n",
       "       Professional degree                                 45662.824726\n",
       "       Secondary school                                    39544.122310\n",
       "       Some college/university study without earning a...  60420.217368"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(df.query(\"Professional == 'Professional developer' and (Gender == 'Male' or Gender == 'Female')\").groupby(['Gender', 'FormalEducation']).mean()['Salary'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Data Understanding\n",
    "def display_bar_chart(df, column, title):\n",
    "    '''\n",
    "    Displays a bar chart with a title\n",
    "    \n",
    "    Parameters:\n",
    "    df: a dataframe\n",
    "    column: the column which we want to show\n",
    "    title: the title of the chart\n",
    "    \n",
    "    Returns:\n",
    "    None\n",
    "    \n",
    "    '''\n",
    "    status_vals = df[column].value_counts()\n",
    "    (status_vals[:10]/df.shape[0]).plot(kind=\"bar\");\n",
    "    plt.title(title);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f851979ecc0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Provide a panda series of counts for each employment status\n",
    "\n",
    "display_bar_chart(df, \"EmploymentStatus\",\"What is your Employment Status?\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f85192ea438>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Provide a pandas series of the counts for each Overpaid status\n",
    "display_bar_chart(df, \"Overpaid\", \"What is your Overpaid Status?\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Preparation\n",
    "\n",
    "For categorical variables like \"Country\", we seperate them into three sectors: western, eastern and other. \n",
    "The following code below defines the lists of related countries and create a new column to identify whether that person lives in the west or in the east."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "def handling_country(df):\n",
    "    '''\n",
    "    \n",
    "    Return a dataframe with country seperate into west and east\n",
    "    \n",
    "    Parameters:\n",
    "    df: a raw data dataframe\n",
    "    \n",
    "    Returns:\n",
    "    df: a dataframe with a new column west_or_east\n",
    "    \n",
    "    '''\n",
    "    # For Categorical variables \"Country\", we seperate them into \n",
    "    # three sessions: western, eastern and other\n",
    "    # The following lists define the countries to western and eastern\n",
    "    western = ['United States', 'Liechtenstein', 'Switzerland', \n",
    "           'Iceland', 'Norway', 'Israel', 'Denmark', \n",
    "           'Ireland', 'Canada', 'United Kingdom', 'Germany', \n",
    "           'Netherlands', 'Sweden', 'Luxembourg', 'Austria', \n",
    "           'Finland', 'France', 'Belgium', 'Spain', 'Italy',\n",
    "           'Poland']\n",
    "\n",
    "    eastern = ['Thailand', 'Singapore', 'Hong Kong', \n",
    "           'South Korea', 'Japan', 'China', \n",
    "           'Taiwan', 'Malaysia', 'India', \n",
    "           'Indonesia', 'Vietnam']\n",
    "    \n",
    "    #Add a new catagory seperating to western and eastern\n",
    "    df['west_or_east'] = df['Country'].apply(lambda x: 'western' if x in western else ('eastern' if x in eastern else 'other'))\n",
    "    \n",
    "    return df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we select some useful columns for our analysis.\n",
    "\n",
    " - Country: Present Country they are living\n",
    "\n",
    " - YearsCodedJob or Experience: Number of years in experience as a coding professional\n",
    "\n",
    " - EmploymentStatus: Indicates the employment status\n",
    "\n",
    " - Salary: Indicates Salary\n",
    "\n",
    " - JobSatisfaction & CareerSatisfaction: Are their satisfied with their job and career\n",
    "\n",
    " - Overpaid: The Developer's thoughts on their salary\n",
    "\n",
    " - We especially focus on employed full-time professional developer."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def data_preparation(df):\n",
    "    '''\n",
    "    \n",
    "    Return useful columns with query condition\n",
    "    \n",
    "    Parameters:\n",
    "    df: a raw data dataframe\n",
    "    \n",
    "    Returns:\n",
    "    useful_df: a filtered dataframe with only useful columns\n",
    "    \n",
    "    '''\n",
    "    #Get some useful columns for analysis\n",
    "    useful_columns = ['Country', 'YearsCodedJob', 'EmploymentStatus', 'CareerSatisfaction', 'JobSatisfaction', 'JobSeekingStatus', 'HoursPerWeek', 'Salary', 'west_or_east', 'Overpaid']\n",
    "    useful_df = pd.DataFrame(df.query(\"Professional == 'Professional developer' and (Gender == 'Male' or Gender == 'Female') and EmploymentStatus == 'Employed full-time'\"))[useful_columns]\n",
    "    return useful_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>YearsCodedJob</th>\n",
       "      <th>EmploymentStatus</th>\n",
       "      <th>CareerSatisfaction</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>JobSeekingStatus</th>\n",
       "      <th>HoursPerWeek</th>\n",
       "      <th>Salary</th>\n",
       "      <th>west_or_east</th>\n",
       "      <th>Overpaid</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>20 or more years</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>113750.0</td>\n",
       "      <td>western</td>\n",
       "      <td>Neither underpaid nor overpaid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Poland</td>\n",
       "      <td>7 to 8 years</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>I'm not actively looking, but I am open to new...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>western</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Colombia</td>\n",
       "      <td>7 to 8 years</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>I am not interested in new job opportunities</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>other</td>\n",
       "      <td>Neither underpaid nor overpaid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Germany</td>\n",
       "      <td>15 to 16 years</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>I am actively looking for a job</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>western</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>20 or more years</td>\n",
       "      <td>Employed full-time</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>western</td>\n",
       "      <td>Somewhat underpaid</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Country     YearsCodedJob    EmploymentStatus  CareerSatisfaction  \\\n",
       "2   United Kingdom  20 or more years  Employed full-time                 8.0   \n",
       "7           Poland      7 to 8 years  Employed full-time                 7.0   \n",
       "8         Colombia      7 to 8 years  Employed full-time                 6.0   \n",
       "13         Germany    15 to 16 years  Employed full-time                 8.0   \n",
       "14  United Kingdom  20 or more years  Employed full-time                 8.0   \n",
       "\n",
       "    JobSatisfaction                                   JobSeekingStatus  \\\n",
       "2               9.0                                                NaN   \n",
       "7               7.0  I'm not actively looking, but I am open to new...   \n",
       "8               6.0       I am not interested in new job opportunities   \n",
       "13              6.0                    I am actively looking for a job   \n",
       "14              8.0                                                NaN   \n",
       "\n",
       "    HoursPerWeek    Salary west_or_east                        Overpaid  \n",
       "2            NaN  113750.0      western  Neither underpaid nor overpaid  \n",
       "7            1.0       NaN      western                             NaN  \n",
       "8            2.0       NaN        other  Neither underpaid nor overpaid  \n",
       "13           3.0       NaN      western                             NaN  \n",
       "14           NaN  100000.0      western              Somewhat underpaid  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Get some useful columns for analysis\n",
    "df = handling_country(df)\n",
    "useful_df = data_preparation(df)\n",
    "useful_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For categorical variable 'Overpaid', we transfer it to calculatable integer value because we want to find out the mean of their opinion. The following code shows the mapping."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "def handling_overpaid(df):\n",
    "    \"\"\"\n",
    "    \n",
    "    Convert Overpaid from words to integer for calculating the mean\n",
    "    \n",
    "    Parameters:\n",
    "    df: a dataframe that will be converted\n",
    "    \n",
    "    Returns:\n",
    "    dataframe: a converted dataframe with Overpaid column becomes measurable\n",
    "    \n",
    "    \"\"\"\n",
    "    overpaid_map = {\n",
    "        'Greatly underpaid' : 1,\n",
    "        'Somewhat underpaid' : 2,\n",
    "        'Neither underpaid nor overpaid' : 3,\n",
    "        'Somewhat overpaid' : 4,\n",
    "        'Greatly overpaid' : 5,\n",
    "        np.nan: np.nan\n",
    "    }\n",
    "    df['Overpaid'] = df['Overpaid'].apply(lambda x: np.nan if x == np.nan else overpaid_map[x] )\n",
    "    \n",
    "    return df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here, we group the dataframe by west_or_east and YearsCodedJob or Experience and get their mean, it automatically ignores the missing or null value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>CareerSatisfaction</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>HoursPerWeek</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Overpaid</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>west_or_east</th>\n",
       "      <th>YearsCodedJob</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"21\" valign=\"top\">eastern</th>\n",
       "      <th>1 to 2 years</th>\n",
       "      <td>6.948148</td>\n",
       "      <td>6.118519</td>\n",
       "      <td>4.738636</td>\n",
       "      <td>10651.675740</td>\n",
       "      <td>2.233333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10 to 11 years</th>\n",
       "      <td>7.666667</td>\n",
       "      <td>6.714286</td>\n",
       "      <td>5.200000</td>\n",
       "      <td>39969.486742</td>\n",
       "      <td>2.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11 to 12 years</th>\n",
       "      <td>7.062500</td>\n",
       "      <td>6.875000</td>\n",
       "      <td>2.600000</td>\n",
       "      <td>62051.574699</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 to 13 years</th>\n",
       "      <td>7.466667</td>\n",
       "      <td>6.200000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>64672.604107</td>\n",
       "      <td>2.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13 to 14 years</th>\n",
       "      <td>7.250000</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>62011.771544</td>\n",
       "      <td>2.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14 to 15 years</th>\n",
       "      <td>6.666667</td>\n",
       "      <td>6.833333</td>\n",
       "      <td>4.666667</td>\n",
       "      <td>99370.629371</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15 to 16 years</th>\n",
       "      <td>6.500000</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52855.674644</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16 to 17 years</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>50448.430493</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17 to 18 years</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18 to 19 years</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.500000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19 to 20 years</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>16150.345030</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2 to 3 years</th>\n",
       "      <td>7.205128</td>\n",
       "      <td>6.418803</td>\n",
       "      <td>7.169492</td>\n",
       "      <td>9612.203018</td>\n",
       "      <td>2.137255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20 or more years</th>\n",
       "      <td>7.428571</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>69920.958916</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3 to 4 years</th>\n",
       "      <td>6.902439</td>\n",
       "      <td>6.182927</td>\n",
       "      <td>7.795455</td>\n",
       "      <td>16683.666527</td>\n",
       "      <td>2.233333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4 to 5 years</th>\n",
       "      <td>7.025000</td>\n",
       "      <td>6.612500</td>\n",
       "      <td>7.976190</td>\n",
       "      <td>13889.764320</td>\n",
       "      <td>2.264706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5 to 6 years</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>6.218750</td>\n",
       "      <td>3.775000</td>\n",
       "      <td>19018.820888</td>\n",
       "      <td>2.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6 to 7 years</th>\n",
       "      <td>6.694444</td>\n",
       "      <td>6.611111</td>\n",
       "      <td>4.375000</td>\n",
       "      <td>18402.376248</td>\n",
       "      <td>2.166667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7 to 8 years</th>\n",
       "      <td>6.954545</td>\n",
       "      <td>6.818182</td>\n",
       "      <td>6.272727</td>\n",
       "      <td>39273.260237</td>\n",
       "      <td>2.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8 to 9 years</th>\n",
       "      <td>6.850000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>2.181818</td>\n",
       "      <td>32829.053816</td>\n",
       "      <td>2.285714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9 to 10 years</th>\n",
       "      <td>6.851852</td>\n",
       "      <td>6.296296</td>\n",
       "      <td>7.045455</td>\n",
       "      <td>27176.671097</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Less than a year</th>\n",
       "      <td>6.424242</td>\n",
       "      <td>6.208955</td>\n",
       "      <td>4.783784</td>\n",
       "      <td>10551.554791</td>\n",
       "      <td>2.615385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"19\" valign=\"top\">other</th>\n",
       "      <th>1 to 2 years</th>\n",
       "      <td>7.562842</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>2.889908</td>\n",
       "      <td>15700.318488</td>\n",
       "      <td>2.210526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10 to 11 years</th>\n",
       "      <td>7.625000</td>\n",
       "      <td>6.965517</td>\n",
       "      <td>1.844444</td>\n",
       "      <td>36709.296802</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11 to 12 years</th>\n",
       "      <td>7.652174</td>\n",
       "      <td>7.413043</td>\n",
       "      <td>0.863636</td>\n",
       "      <td>36143.501376</td>\n",
       "      <td>2.380952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 to 13 years</th>\n",
       "      <td>7.297297</td>\n",
       "      <td>6.621622</td>\n",
       "      <td>1.375000</td>\n",
       "      <td>48040.277445</td>\n",
       "      <td>2.470588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13 to 14 years</th>\n",
       "      <td>7.642857</td>\n",
       "      <td>6.892857</td>\n",
       "      <td>2.285714</td>\n",
       "      <td>53714.902842</td>\n",
       "      <td>2.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14 to 15 years</th>\n",
       "      <td>7.866667</td>\n",
       "      <td>7.862069</td>\n",
       "      <td>1.461538</td>\n",
       "      <td>57618.154748</td>\n",
       "      <td>2.642857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15 to 16 years</th>\n",
       "      <td>7.595238</td>\n",
       "      <td>7.619048</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>50865.747566</td>\n",
       "      <td>2.450000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16 to 17 years</th>\n",
       "      <td>7.555556</td>\n",
       "      <td>7.416667</td>\n",
       "      <td>1.538462</td>\n",
       "      <td>43250.277699</td>\n",
       "      <td>2.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17 to 18 years</th>\n",
       "      <td>7.272727</td>\n",
       "      <td>7.136364</td>\n",
       "      <td>0.923077</td>\n",
       "      <td>47927.242222</td>\n",
       "      <td>2.538462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20 or more years</th>\n",
       "      <td>7.581081</td>\n",
       "      <td>7.337838</td>\n",
       "      <td>2.060606</td>\n",
       "      <td>62387.842106</td>\n",
       "      <td>2.538462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3 to 4 years</th>\n",
       "      <td>7.445026</td>\n",
       "      <td>6.868421</td>\n",
       "      <td>3.967742</td>\n",
       "      <td>20998.815378</td>\n",
       "      <td>2.340659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4 to 5 years</th>\n",
       "      <td>7.594286</td>\n",
       "      <td>7.297143</td>\n",
       "      <td>3.311111</td>\n",
       "      <td>24075.795555</td>\n",
       "      <td>2.455696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5 to 6 years</th>\n",
       "      <td>7.274854</td>\n",
       "      <td>6.842105</td>\n",
       "      <td>3.089888</td>\n",
       "      <td>29026.651706</td>\n",
       "      <td>2.390244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6 to 7 years</th>\n",
       "      <td>7.474747</td>\n",
       "      <td>6.868687</td>\n",
       "      <td>3.760000</td>\n",
       "      <td>31239.968422</td>\n",
       "      <td>2.472727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7 to 8 years</th>\n",
       "      <td>7.711538</td>\n",
       "      <td>7.384615</td>\n",
       "      <td>2.413043</td>\n",
       "      <td>39917.755721</td>\n",
       "      <td>2.620000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8 to 9 years</th>\n",
       "      <td>7.421687</td>\n",
       "      <td>6.710843</td>\n",
       "      <td>1.525000</td>\n",
       "      <td>30812.746141</td>\n",
       "      <td>2.525000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9 to 10 years</th>\n",
       "      <td>7.463158</td>\n",
       "      <td>6.968421</td>\n",
       "      <td>2.893617</td>\n",
       "      <td>31581.396582</td>\n",
       "      <td>2.490909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Less than a year</th>\n",
       "      <td>7.024691</td>\n",
       "      <td>6.876543</td>\n",
       "      <td>5.150000</td>\n",
       "      <td>13707.241332</td>\n",
       "      <td>2.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"21\" valign=\"top\">western</th>\n",
       "      <th>1 to 2 years</th>\n",
       "      <td>7.694915</td>\n",
       "      <td>7.248408</td>\n",
       "      <td>1.838235</td>\n",
       "      <td>48123.772554</td>\n",
       "      <td>2.380952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10 to 11 years</th>\n",
       "      <td>7.542553</td>\n",
       "      <td>7.049822</td>\n",
       "      <td>2.094488</td>\n",
       "      <td>77994.156887</td>\n",
       "      <td>2.494186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11 to 12 years</th>\n",
       "      <td>7.547297</td>\n",
       "      <td>7.299320</td>\n",
       "      <td>1.142857</td>\n",
       "      <td>84817.295256</td>\n",
       "      <td>2.493506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12 to 13 years</th>\n",
       "      <td>7.558824</td>\n",
       "      <td>7.066176</td>\n",
       "      <td>1.360000</td>\n",
       "      <td>99718.849348</td>\n",
       "      <td>2.696203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13 to 14 years</th>\n",
       "      <td>7.546296</td>\n",
       "      <td>6.935185</td>\n",
       "      <td>1.454545</td>\n",
       "      <td>87533.219797</td>\n",
       "      <td>2.565217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14 to 15 years</th>\n",
       "      <td>7.623077</td>\n",
       "      <td>7.076923</td>\n",
       "      <td>1.704918</td>\n",
       "      <td>89701.387143</td>\n",
       "      <td>2.701299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15 to 16 years</th>\n",
       "      <td>7.506250</td>\n",
       "      <td>7.118750</td>\n",
       "      <td>2.409836</td>\n",
       "      <td>88129.814607</td>\n",
       "      <td>2.465116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16 to 17 years</th>\n",
       "      <td>7.744186</td>\n",
       "      <td>7.170543</td>\n",
       "      <td>2.942308</td>\n",
       "      <td>84798.720367</td>\n",
       "      <td>2.507042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17 to 18 years</th>\n",
       "      <td>7.700000</td>\n",
       "      <td>7.218182</td>\n",
       "      <td>1.487179</td>\n",
       "      <td>99617.367013</td>\n",
       "      <td>2.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18 to 19 years</th>\n",
       "      <td>7.513889</td>\n",
       "      <td>6.986111</td>\n",
       "      <td>2.435897</td>\n",
       "      <td>89811.641376</td>\n",
       "      <td>2.710526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19 to 20 years</th>\n",
       "      <td>7.457143</td>\n",
       "      <td>6.885714</td>\n",
       "      <td>3.230769</td>\n",
       "      <td>90883.199023</td>\n",
       "      <td>2.472222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2 to 3 years</th>\n",
       "      <td>7.571702</td>\n",
       "      <td>7.260038</td>\n",
       "      <td>2.366972</td>\n",
       "      <td>52970.914900</td>\n",
       "      <td>2.322388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20 or more years</th>\n",
       "      <td>7.935135</td>\n",
       "      <td>7.388087</td>\n",
       "      <td>2.429224</td>\n",
       "      <td>105635.073958</td>\n",
       "      <td>2.485915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3 to 4 years</th>\n",
       "      <td>7.587234</td>\n",
       "      <td>7.089362</td>\n",
       "      <td>1.902778</td>\n",
       "      <td>58861.141690</td>\n",
       "      <td>2.295139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4 to 5 years</th>\n",
       "      <td>7.484091</td>\n",
       "      <td>7.015873</td>\n",
       "      <td>1.614583</td>\n",
       "      <td>63276.310318</td>\n",
       "      <td>2.253521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5 to 6 years</th>\n",
       "      <td>7.590909</td>\n",
       "      <td>6.990431</td>\n",
       "      <td>1.928962</td>\n",
       "      <td>64706.376967</td>\n",
       "      <td>2.408730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6 to 7 years</th>\n",
       "      <td>7.775439</td>\n",
       "      <td>7.291228</td>\n",
       "      <td>1.837398</td>\n",
       "      <td>69989.310207</td>\n",
       "      <td>2.452229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7 to 8 years</th>\n",
       "      <td>7.557252</td>\n",
       "      <td>7.275862</td>\n",
       "      <td>1.781818</td>\n",
       "      <td>72434.711370</td>\n",
       "      <td>2.496855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8 to 9 years</th>\n",
       "      <td>7.424893</td>\n",
       "      <td>7.077253</td>\n",
       "      <td>2.391753</td>\n",
       "      <td>74856.521782</td>\n",
       "      <td>2.419118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9 to 10 years</th>\n",
       "      <td>7.530405</td>\n",
       "      <td>7.037162</td>\n",
       "      <td>1.680328</td>\n",
       "      <td>79016.849514</td>\n",
       "      <td>2.470930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Less than a year</th>\n",
       "      <td>7.844749</td>\n",
       "      <td>7.675799</td>\n",
       "      <td>2.260870</td>\n",
       "      <td>45661.718139</td>\n",
       "      <td>2.464000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>63 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               CareerSatisfaction  JobSatisfaction  \\\n",
       "west_or_east YearsCodedJob                                           \n",
       "eastern      1 to 2 years                6.948148         6.118519   \n",
       "             10 to 11 years              7.666667         6.714286   \n",
       "             11 to 12 years              7.062500         6.875000   \n",
       "             12 to 13 years              7.466667         6.200000   \n",
       "             13 to 14 years              7.250000         7.500000   \n",
       "             14 to 15 years              6.666667         6.833333   \n",
       "             15 to 16 years              6.500000         6.500000   \n",
       "             16 to 17 years              7.000000         6.000000   \n",
       "             17 to 18 years              8.000000         8.000000   \n",
       "             18 to 19 years              8.000000         8.500000   \n",
       "             19 to 20 years              7.000000         7.000000   \n",
       "             2 to 3 years                7.205128         6.418803   \n",
       "             20 or more years            7.428571         6.000000   \n",
       "             3 to 4 years                6.902439         6.182927   \n",
       "             4 to 5 years                7.025000         6.612500   \n",
       "             5 to 6 years                7.000000         6.218750   \n",
       "             6 to 7 years                6.694444         6.611111   \n",
       "             7 to 8 years                6.954545         6.818182   \n",
       "             8 to 9 years                6.850000         6.600000   \n",
       "             9 to 10 years               6.851852         6.296296   \n",
       "             Less than a year            6.424242         6.208955   \n",
       "other        1 to 2 years                7.562842         7.000000   \n",
       "             10 to 11 years              7.625000         6.965517   \n",
       "             11 to 12 years              7.652174         7.413043   \n",
       "             12 to 13 years              7.297297         6.621622   \n",
       "             13 to 14 years              7.642857         6.892857   \n",
       "             14 to 15 years              7.866667         7.862069   \n",
       "             15 to 16 years              7.595238         7.619048   \n",
       "             16 to 17 years              7.555556         7.416667   \n",
       "             17 to 18 years              7.272727         7.136364   \n",
       "...                                           ...              ...   \n",
       "             20 or more years            7.581081         7.337838   \n",
       "             3 to 4 years                7.445026         6.868421   \n",
       "             4 to 5 years                7.594286         7.297143   \n",
       "             5 to 6 years                7.274854         6.842105   \n",
       "             6 to 7 years                7.474747         6.868687   \n",
       "             7 to 8 years                7.711538         7.384615   \n",
       "             8 to 9 years                7.421687         6.710843   \n",
       "             9 to 10 years               7.463158         6.968421   \n",
       "             Less than a year            7.024691         6.876543   \n",
       "western      1 to 2 years                7.694915         7.248408   \n",
       "             10 to 11 years              7.542553         7.049822   \n",
       "             11 to 12 years              7.547297         7.299320   \n",
       "             12 to 13 years              7.558824         7.066176   \n",
       "             13 to 14 years              7.546296         6.935185   \n",
       "             14 to 15 years              7.623077         7.076923   \n",
       "             15 to 16 years              7.506250         7.118750   \n",
       "             16 to 17 years              7.744186         7.170543   \n",
       "             17 to 18 years              7.700000         7.218182   \n",
       "             18 to 19 years              7.513889         6.986111   \n",
       "             19 to 20 years              7.457143         6.885714   \n",
       "             2 to 3 years                7.571702         7.260038   \n",
       "             20 or more years            7.935135         7.388087   \n",
       "             3 to 4 years                7.587234         7.089362   \n",
       "             4 to 5 years                7.484091         7.015873   \n",
       "             5 to 6 years                7.590909         6.990431   \n",
       "             6 to 7 years                7.775439         7.291228   \n",
       "             7 to 8 years                7.557252         7.275862   \n",
       "             8 to 9 years                7.424893         7.077253   \n",
       "             9 to 10 years               7.530405         7.037162   \n",
       "             Less than a year            7.844749         7.675799   \n",
       "\n",
       "                               HoursPerWeek         Salary  Overpaid  \n",
       "west_or_east YearsCodedJob                                            \n",
       "eastern      1 to 2 years          4.738636   10651.675740  2.233333  \n",
       "             10 to 11 years        5.200000   39969.486742  2.857143  \n",
       "             11 to 12 years        2.600000   62051.574699  2.500000  \n",
       "             12 to 13 years        3.000000   64672.604107  2.200000  \n",
       "             13 to 14 years       26.000000   62011.771544  2.666667  \n",
       "             14 to 15 years        4.666667   99370.629371  3.000000  \n",
       "             15 to 16 years             NaN   52855.674644  2.000000  \n",
       "             16 to 17 years        2.500000   50448.430493  2.000000  \n",
       "             17 to 18 years             NaN            NaN       NaN  \n",
       "             18 to 19 years             NaN            NaN       NaN  \n",
       "             19 to 20 years        0.666667   16150.345030  1.000000  \n",
       "             2 to 3 years          7.169492    9612.203018  2.137255  \n",
       "             20 or more years      0.500000   69920.958916  3.000000  \n",
       "             3 to 4 years          7.795455   16683.666527  2.233333  \n",
       "             4 to 5 years          7.976190   13889.764320  2.264706  \n",
       "             5 to 6 years          3.775000   19018.820888  2.250000  \n",
       "             6 to 7 years          4.375000   18402.376248  2.166667  \n",
       "             7 to 8 years          6.272727   39273.260237  2.333333  \n",
       "             8 to 9 years          2.181818   32829.053816  2.285714  \n",
       "             9 to 10 years         7.045455   27176.671097  2.000000  \n",
       "             Less than a year      4.783784   10551.554791  2.615385  \n",
       "other        1 to 2 years          2.889908   15700.318488  2.210526  \n",
       "             10 to 11 years        1.844444   36709.296802  2.500000  \n",
       "             11 to 12 years        0.863636   36143.501376  2.380952  \n",
       "             12 to 13 years        1.375000   48040.277445  2.470588  \n",
       "             13 to 14 years        2.285714   53714.902842  2.714286  \n",
       "             14 to 15 years        1.461538   57618.154748  2.642857  \n",
       "             15 to 16 years        1.000000   50865.747566  2.450000  \n",
       "             16 to 17 years        1.538462   43250.277699  2.333333  \n",
       "             17 to 18 years        0.923077   47927.242222  2.538462  \n",
       "...                                     ...            ...       ...  \n",
       "             20 or more years      2.060606   62387.842106  2.538462  \n",
       "             3 to 4 years          3.967742   20998.815378  2.340659  \n",
       "             4 to 5 years          3.311111   24075.795555  2.455696  \n",
       "             5 to 6 years          3.089888   29026.651706  2.390244  \n",
       "             6 to 7 years          3.760000   31239.968422  2.472727  \n",
       "             7 to 8 years          2.413043   39917.755721  2.620000  \n",
       "             8 to 9 years          1.525000   30812.746141  2.525000  \n",
       "             9 to 10 years         2.893617   31581.396582  2.490909  \n",
       "             Less than a year      5.150000   13707.241332  2.250000  \n",
       "western      1 to 2 years          1.838235   48123.772554  2.380952  \n",
       "             10 to 11 years        2.094488   77994.156887  2.494186  \n",
       "             11 to 12 years        1.142857   84817.295256  2.493506  \n",
       "             12 to 13 years        1.360000   99718.849348  2.696203  \n",
       "             13 to 14 years        1.454545   87533.219797  2.565217  \n",
       "             14 to 15 years        1.704918   89701.387143  2.701299  \n",
       "             15 to 16 years        2.409836   88129.814607  2.465116  \n",
       "             16 to 17 years        2.942308   84798.720367  2.507042  \n",
       "             17 to 18 years        1.487179   99617.367013  2.750000  \n",
       "             18 to 19 years        2.435897   89811.641376  2.710526  \n",
       "             19 to 20 years        3.230769   90883.199023  2.472222  \n",
       "             2 to 3 years          2.366972   52970.914900  2.322388  \n",
       "             20 or more years      2.429224  105635.073958  2.485915  \n",
       "             3 to 4 years          1.902778   58861.141690  2.295139  \n",
       "             4 to 5 years          1.614583   63276.310318  2.253521  \n",
       "             5 to 6 years          1.928962   64706.376967  2.408730  \n",
       "             6 to 7 years          1.837398   69989.310207  2.452229  \n",
       "             7 to 8 years          1.781818   72434.711370  2.496855  \n",
       "             8 to 9 years          2.391753   74856.521782  2.419118  \n",
       "             9 to 10 years         1.680328   79016.849514  2.470930  \n",
       "             Less than a year      2.260870   45661.718139  2.464000  \n",
       "\n",
       "[63 rows x 5 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Compare selected indicators between western and eastern\n",
    "useful_df = handling_overpaid(useful_df)\n",
    "comparison = useful_df.groupby(['west_or_east','YearsCodedJob']).mean()\n",
    "comparison"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For categorical variable 'YearsCodedJob', we transfer it to calculative integer value because we want to find out the mean of how long they have been coded. The following code shows the mapping."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def handling_yearscodedjob(df):\n",
    "    \"\"\"\n",
    "    \n",
    "    Convert the working year to integer for calculating the mean\n",
    "    \n",
    "    Parameters:\n",
    "    df: a dataframe that will be converted\n",
    "    \n",
    "    Returns:\n",
    "    dataframe: a converted dataframe with YearsCodedJob column becomes measurable\n",
    "    \n",
    "    \"\"\"\n",
    "    year_map = {'1 to 2 years' : 1, \n",
    "                '10 to 11 years' : 10, \n",
    "                '11 to 12 years' : 11, \n",
    "                '12 to 13 years' : 12,\n",
    "                '13 to 14 years' : 13, \n",
    "                '14 to 15 years' : 14, \n",
    "                '15 to 16 years' : 15, \n",
    "                '16 to 17 years' : 16,\n",
    "                '17 to 18 years' : 17, \n",
    "                '18 to 19 years' : 18, \n",
    "                '19 to 20 years' : 19, \n",
    "                '2 to 3 years' : 2,\n",
    "                '20 or more years' : 20, \n",
    "                '3 to 4 years' : 3, \n",
    "                '4 to 5 years' : 4, \n",
    "                '5 to 6 years' : 5, \n",
    "                '6 to 7 years' : 6, \n",
    "                '7 to 8 years' : 7, \n",
    "                '8 to 9 years' : 8, \n",
    "                '9 to 10 years' : 9, \n",
    "                'Less than a year' : 0}\n",
    "    \n",
    "    df_graph = df.reset_index()\n",
    "    df_graph['YearsCodedJob'] = df_graph['YearsCodedJob'].apply(lambda x: year_map[x])\n",
    "    df_graph['YearsCodedJob'] = pd.to_numeric(df_graph['YearsCodedJob'])\n",
    "    \n",
    "    return df_graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "comparison_graph = handling_yearscodedjob(comparison)\n",
    "comparison_graph = comparison_graph.sort_values(by='YearsCodedJob')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "comparison_graph.set_index('YearsCodedJob', inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Results Evaluation \n",
    "In this section, we will display the findings and discuss about it.\n",
    "Here you can see a programmerâ€™s salary in the east is much lower than that in the west no matter how many years you are coding."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Average Salary')"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8519e4fd30>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Result Evaluation\n",
    "#Plot the salary comparison between the Western coast and Eastern coast\n",
    "comparison_graph.groupby('west_or_east')['Salary'].plot(legend=True)\n",
    "plt.title(\"Salary Comparison between Western world and Eastern world\");\n",
    "plt.xlabel('YearsCodedJob or Experience')\n",
    "plt.ylabel('Average Salary')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The trend lines here represent how developers think through when they are overpaid, with a higher mark indicates the more they think they are overpaid.\n",
    "You can see that eastern programmers indicated by blue line have a behaviroal pattern of not being enthusiastic because of being underpaid in their whole career than programmers in the west indicated by a green line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Overpaid')"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f851920c940>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot how the programmer thinks they are overpaid or not\n",
    "comparison_graph.groupby('west_or_east')['Overpaid'].plot(legend=True)\n",
    "plt.title(\"Thoughts of developers on being overpaid?\");\n",
    "plt.xlabel('YearsCodedJob or Experience')\n",
    "plt.ylabel('Overpaid')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "west_or_east\n",
       "eastern    7.090327\n",
       "other      7.477579\n",
       "western    7.606488\n",
       "Name: CareerSatisfaction, dtype: float64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comparison.groupby('west_or_east').mean().CareerSatisfaction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "west_or_east\n",
       "eastern    6.676603\n",
       "other      7.069556\n",
       "western    7.150297\n",
       "Name: JobSatisfaction, dtype: float64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comparison.groupby('west_or_east').mean().JobSatisfaction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "west_or_east\n",
       "eastern     753.200550\n",
       "other       764.457733\n",
       "western    1550.988907\n",
       "Name: Salary, dtype: float64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comparison.groupby('west_or_east').mean().Salary/50"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By observation, we can see that western programmers indicated by a blue ball have a much higher job satisfaction rate on their career, positioned at the right-high-up corner. The ball size indicator their average salary, the blue ball size is much larger than the red ball indicative of the eastern programmers salary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Job Satisfaction')"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f851918f8d0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot Comparison of Career and Job Satisfaction between Western World and Eastern World\n",
    "plt.scatter(comparison.groupby('west_or_east').mean().CareerSatisfaction, comparison.groupby('west_or_east').mean().JobSatisfaction, comparison.groupby('west_or_east').mean().Salary/50, c=['red','green','blue'])\n",
    "\n",
    "plt.title('Comparison to find difference of Career and Job Satisfaction\\n(Red: Eastern; Green: Other; Blue: Western)')\n",
    "plt.xlabel('Career Satisfaction')\n",
    "plt.ylabel('Job Satisfaction')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "- We compared salaries based on Years a developer has been coded between the east world and the west world. The outcomes we observed were salaries of western programmers were more than the east no matter if they had the same amount of coding experience or more.\n",
    "- Then, we observed how different the view points are in terms of behavior on how east and west programmers think if theyâ€™re underpaid. This depicted an outcome that majority of east coast developers think that they are underpaid than the developers in the west coast no matter if they have the same level of experience or more in coding.\n",
    "- Final observation was that the career and job satisfaction of software developers in the west are much higher than those in the east."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
